// Code generated by generator; DO NOT EDIT.
package config

import (
	"context"

	konfig "github.com/olefire/realtime-config-go"
	clientv3 "go.etcd.io/etcd/client/v3"
)

type AppConfig interface {
	// GetAppName возвращает значение app_name. Название приложения
	GetAppName() string
	// GetMaxRetries возвращает значение max_retries. Максимальное число попыток
	GetMaxRetries() int
	// GetDebug возвращает значение debug. Включение режима отладки
	GetDebug() bool
	// GetServers возвращает значение servers. Список серверов
	GetServers() []string
	// GetThresholds возвращает значение thresholds. Пороговые значения
	GetThresholds() map[string]int
	// GetLabels возвращает значение labels. Метки окружения
	GetLabels() map[string]string
}

type appConfig struct {
	appName    string            `etcd:"app_name"`
	maxRetries int               `etcd:"max_retries"`
	debug      bool              `etcd:"debug"`
	servers    []string          `etcd:"servers"`
	thresholds map[string]int    `etcd:"thresholds"`
	labels     map[string]string `etcd:"labels"`
}

func NewAppConfig(ctx context.Context, cli *clientv3.Client, prefix string) (*konfig.RealTimeConfig, error) {
	cfg := &appConfig{
		appName:    "my-app",
		maxRetries: 5,
		debug:      false,
		servers:    []string{"server1", "server2"},
		thresholds: map[string]int{"cpu": 80, "memory": 70},
		labels:     map[string]string{"env": "production", "region": "us-east-1"},
	}
	return konfig.NewRealTimeConfig(ctx, cli, prefix, cfg)
}

// GetAppName возвращает значение app_name. Название приложения
func (c *appConfig) GetAppName() string {
	return c.appName
}

// GetMaxRetries возвращает значение max_retries. Максимальное число попыток
func (c *appConfig) GetMaxRetries() int {
	return c.maxRetries
}

// GetDebug возвращает значение debug. Включение режима отладки
func (c *appConfig) GetDebug() bool {
	return c.debug
}

// GetServers возвращает значение servers. Список серверов
func (c *appConfig) GetServers() []string {
	return c.servers
}

// GetThresholds возвращает значение thresholds. Пороговые значения
func (c *appConfig) GetThresholds() map[string]int {
	return c.thresholds
}

// GetLabels возвращает значение labels. Метки окружения
func (c *appConfig) GetLabels() map[string]string {
	return c.labels
}
